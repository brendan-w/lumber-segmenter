var solve={sources:void 0,segments:void 0,used:void 0,kerf:void 0,best_used:void 0,best_loss:void 0,best_clumping:void 0,totalLoss:void 0,run:function(e,s,t){return sources=e,segments=s,used=new Array,kerf=t,best_used=void 0,best_loss=void 0,best_clumping=void 0,this.solve(segments.length-1),totalLoss=best_loss,best_used},solve:function(e){if(e>=0)for(var s=segments[e],t=new Array,r=0;r<sources.length;r++){var n=sources[r],o={length:n.length,numSegs:n.numSegs,segLength:n.segLength};this.inArray(o,t)||(t.push(o),this.remainingSpace(r)>=s.length&&(n.segLength+=s.length,n.numSegs++,used[e]=r,this.solve(e-1),used[e]=-1,n.numSegs--,n.segLength-=s.length))}else{var i=this.totalLoss(),u=this.totalClumping();(void 0===best_loss||i<=best_loss&&u>best_clumping)&&(best_loss=i,best_used=used.slice(0),best_clumping=u)}},totalLoss:function(){for(var e=0,s=0;s<sources.length;s++){var t=sources[s];t.numSegs>0&&(e+=this.remainingSpace(s))}return e},totalClumping:function(){for(var e=0,s=this.totalLoss(),t=0,r=0;r<sources.length;r++){var n=sources[r];n.numSegs>0&&t++}s/=t;for(var r=0;r<sources.length;r++){var n=sources[r];n.numSegs>0&&(e+=Math.abs(s-n.segLength))}return e},remainingSpace:function(e){var s=sources[e];return rem=s.length-(s.segLength+s.numSegs*kerf),rem},inArray:function(e,s){for(var t=0;t<s.length;t++)if(s[t].length===e.length&&s[t].numSegs===e.numSegs&&s[t].segLength===e.segLength)return!0;return!1}},fast_solve_1={sources:void 0,segments:void 0,used:void 0,kerf:void 0,totalLoss:void 0,sourceTypes:void 0,segmentTypes:void 0,run:function(e,s,t){return sources=e,segments=s,used=new Array,kerf=t,sourceTypes=this.compileTypes(sources),segmentTypes=this.compileTypes(segments),this.totalLoss=0,this.solve(),used},solve:function(){for(;this.areMore(segmentTypes)&&this.areMore(sourceTypes);){for(var e=void 0,s=void 0,t=void 0,r=0;r<sourceTypes.length;r++){var n=sourceTypes[r];if(0!=n.indices.length){var o=this.fillPieces(n.length);(void 0===e||o.loss<e)&&(e=o.loss,s=o.pattern,t=r)}}this.totalLoss+=e;for(var i=sourceTypes[t].indices.pop(),r=0;r<s.length;r++){var u=segmentTypes[s[r]].indices.pop();used[u]=i}}!this.areMore(sourceTypes)&&this.areMore(segmentTypes)&&(used=void 0)},fillPieces:function(e){for(var s=new Array,t=0;t<segmentTypes.length;t++)for(var r=segmentTypes[t],n=r.indices.slice(0);0!=n.length&&e>=r.length;)s.push(t),n.pop(),e-=r.length+kerf;return{loss:e,pattern:s}},areMore:function(e){for(var s=0;s<e.length;s++){var t=e[s];if(t.indices.length>0)return!0}return!1},compileTypes:function(e){for(var s=new Array,t=0;t<e.length;t++){var r=e[t],n=this.inArray(r,s);if(-1===n){var o={length:r.length,indices:new Array};o.indices.push(t),s.push(o)}else s[n].indices.push(t)}return s},inArray:function(e,s){for(var t=0;t<s.length;t++)if(s[t].length===e.length)return t;return-1}},fast_solve_2={sources:void 0,segments:void 0,used:void 0,kerf:void 0,totalLoss:void 0,sourceTypes:void 0,segmentTypes:void 0,r_best_loss:void 0,r_best_pattern:void 0,run:function(e,s,t){return sources=e,segments=s,used=new Array,kerf=t,this.totalLoss=0,sourceTypes=this.compileTypes(sources),segmentTypes=this.compileTypes(segments),this.solve(),used},solve:function(){for(;this.areMore(segmentTypes)&&this.areMore(sourceTypes);){for(var e=void 0,s=void 0,t=void 0,r=0;r<sourceTypes.length;r++){var n=sourceTypes[r];0!=n.indices.length&&(r_best_loss=void 0,r_best_pattern=void 0,this.addPiece(n.length,new Array),(void 0===e||r_best_loss<e)&&(e=r_best_loss,s=r_best_pattern,t=r))}this.totalLoss+=e;for(var o=sourceTypes[t].indices.pop(),r=0;r<s.length;r++){var i=segmentTypes[s[r]].indices.pop();used[i]=o}}!this.areMore(sourceTypes)&&this.areMore(segmentTypes)&&(used=void 0)},addPiece:function(e,s){var t=!1;if(e>kerf)for(var r=0;r<segmentTypes.length;r++){var n=segmentTypes[r];if(0!=n.indices.length&&e>=n.length){t=!0;var o=n.indices.pop();s.push(r),this.addPiece(e-(n.length+kerf),s),s.pop(),n.indices.push(o)}}t||(void 0===r_best_loss||e<r_best_loss)&&(r_best_loss=e,r_best_pattern=s.slice(0))},areMore:function(e){for(var s=0;s<e.length;s++){var t=e[s];if(t.indices.length>0)return!0}return!1},compileTypes:function(e){for(var s=new Array,t=0;t<e.length;t++){var r=e[t],n=this.inArray(r,s);if(-1===n){var o={length:r.length,indices:new Array};o.indices.push(t),s.push(o)}else s[n].indices.push(t)}return s},inArray:function(e,s){for(var t=0;t<s.length;t++)if(s[t].length===e.length)return t;return-1}},segmenter={run:function(e,s,t,r,n){for(var o=[],i=0;i<t.length;i++)o.push(this.makeSource(t[i].length));for(var i=0;i<r.length;i++)o.push(this.makeSource(r[i].length));var u=this.test(o,n);if(u.tooBig)return this.makeResult(!1,"One of your desired cuts is too big for any of your stock");if(0===r.length){if(u.tooMuch)return this.makeResult(!1,"You don't have enough wood for that :(")}else for(var i=0;i<r.length;i++){var l=r[i].length,h=Math.ceil(u.maxLoss/l);u.tooMuch&&(h+=Math.ceil(u.howMuchMore/l));for(var a=0;h>a;a++)o.push(this.makeSource(l))}o.sort(function(e,s){return s.length-e.length}),n.sort(function(e,s){return s.length-e.length});var g=void 0;switch(e){default:case"auto":if((t.length+r.length)*n.length<35)g=solve.run(o,n,s);else{var c=fast_solve_1.run(o,n,s),v=fast_solve_1.totalLoss,f=fast_solve_2.run(o,n,s),d=fast_solve_2.totalLoss;g=d>=v?c:f}break;case"solve":g=solve.run(o,n,s);break;case"fast_1":g=fast_solve_1.run(o,n,s);break;case"fast_2":g=fast_solve_2.run(o,n,s)}if(void 0===g||0===g.length)return this.makeResult(!1,"Can't do it :(");var p=this.compileResults(o,n,g);return this.makeResult(!0,p)},compileResults:function(e,s,t){for(var r=new Array,n=0;n<e.length;n++)r[n]={length:e[n].length,segments:new Array,segLength:0};for(var n=0;n<t.length;n++){var o=r[t[n]];o.segments.push(s[n]),o.segLength+=s[n].length}for(var n=0;n<r.length;n++)0==r[n].segments.length&&(r.splice(n,1),n--);return r.sort(function(e,s){return s.segLength-e.segLength}),r},test:function(e,s){for(var t=0,r=0,n=0,o=0,i=0,u=0;u<e.length;u++){var l=e[u].length;o+=l,l>t&&(t=l)}for(var u=0;u<s.length;u++){var l=s[u].length;i+=l,l>r&&(r=l)}return n=i/s.length,{tooBig:r>t,tooMuch:i>o,howMuchMore:i-o,maxLoss:(t-n)*s.length}},makeSource:function(e){return{length:e,numSegs:0,segLength:0}},makeResult:function(e,s){return{success:e,data:s}}};